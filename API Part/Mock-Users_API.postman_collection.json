{
	"info": {
		"_postman_id": "8b18fb44-3ca9-4ac7-986d-5064d22f99f3",
		"name": "Mock-Users_API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "23412374",
		"_collection_link": "https://red-flare-978310.postman.co/workspace/Team-Workspace~4413a9b0-24c0-4a05-8686-3ca1e2c81703/collection/23412374-8b18fb44-3ca9-4ac7-986d-5064d22f99f3?action=share&source=collection_link&creator=23412374"
	},
	"item": [
		{
			"name": "CREATE_USER",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"ExpectedErrorCode = pm.iterationData.get(\"errorCode\")\r",
							"\r",
							"pm.test(\"Verify the errorCode in response matches data sheet\",()=>\r",
							"{\r",
							"    pm.expect(parseInt(pm.response.code)).to.be.eql(ExpectedErrorCode)\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"{{name}}\",\r\n    \"email\": \"{{email}}\",\r\n    \"password\":\"{{password}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/v1/users",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"v1",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "AUTHENTICATE_USER",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//Getting Token and parse it to Enviroment variable\r",
							"pm.test(\"Getting Token\", ()=> {\r",
							"    const response = pm.response.json();\r",
							"    var token = response.token;\r",
							"    pm.collectionVariables.set(\"mock_token\", token);\r",
							"})\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"    pm.expect(pm.response.status).to.equal(\"OK\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\": \"{{email}}\",\r\n    \"password\":\"{{password}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/v1/auth",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"v1",
						"auth"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET_USER",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"    pm.expect(pm.response.status).to.equal(\"OK\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "token",
						"type": "text",
						"disabled": true
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "javascript"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/v1/users?token={{mock_token}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"v1",
						"users"
					],
					"query": [
						{
							"key": "token",
							"value": "{{mock_token}}"
						},
						{
							"key": "",
							"value": "",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "PATCH_USER",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"ExpectedErrorCode = pm.iterationData.get(\"patchErrorCode\")\r",
							"\r",
							"pm.test(\"Verify the errorCode in response matches data sheet\",()=>\r",
							"{\r",
							"    pm.expect(parseInt(pm.response.code)).to.be.eql(ExpectedErrorCode)\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"name\": \"{{newName222222}}\",\r\n  \"email\": \"{{newEmail}}\",\r\n  \"password\": \"{{newPassword}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/v1/users?token={{mock_token}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"v1",
						"users"
					],
					"query": [
						{
							"key": "token",
							"value": "{{mock_token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete_User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"    pm.expect(pm.response.status).to.equal(\"OK\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{mock_token}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/api/v1/users?token={{mock_token}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"v1",
						"users"
					],
					"query": [
						{
							"key": "token",
							"value": "{{mock_token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete_All_Users",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"    pm.expect(pm.response.status).to.equal(\"OK\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"key_admin\": \"keyadmin123\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/v1/all-users",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"v1",
						"all-users"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "mock_token",
			"value": ""
		}
	]
}